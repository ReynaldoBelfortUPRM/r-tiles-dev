/*
 * main.c
 * Main program for TIVA MCU - Experiment 3
 * Read a Key Using Interrupts
 * Exercise 3.2.1
 *
 * Lab Team:
 * Emmanuel Ramos
 * Reynaldo Belfort
 *
 * TODO Pin setup
 *Port A:
 * 2 - Pull up push button
 * 3 - Pull down push button
 */

#include <stdint.h>
#include <stdbool.h>
#include "inc/hw_types.h"
#include "inc/hw_memmap.h"
#include "driverlib/sysctl.h"
#include "driverlib/gpio.h"
//Include our LCDlibrary
#include "customLibs/MIL_LCD_lib.h"

int main(void) {
	
	//****MCU Initialization****
	SysCtlClockSet(SYSCTL_SYSDIV_5|SYSCTL_USE_PLL|SYSCTL_XTAL_16MHZ|SYSCTL_OSC_MAIN); //Set-up the clocking of the MCU to 40MHz
	//--Prepare peripherals--
	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOB);

	//Set port output pins
	GPIOPinTypeGPIOOutput(GPIO_PORTA_BASE, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_5);
	GPIOPinTypeGPIOOutput(GPIO_PORTB_BASE, ENTIRE_PORT);
	//Set port input pins
	GPIOPinTypeGPIOInput(GPIO_PORTA_BASE, (GPIO_PIN_2|GPIO_PIN_3));

	// Set Pin 2 to pull up
	GPIOPadConfigSet(GPIO_PORTA_BASE, GPIO_PIN_2, GPIO_STRENGTH_8MA,GPIO_PIN_TYPE_STD_WPD);
	// Set pin 3 to pull down
	GPIOPadConfigSet(GPIO_PORTA_BASE, GPIO_PIN_3, GPIO_STRENGTH_8MA,GPIO_PIN_TYPE_STD_WPU);

	//****END of MCU Initialization****

	//----LCD setup----
	initializeLCD();

	//Test - Display first line
	uint8_t helloStr[16] = "LCD initialized!";
	writeMessage(helloStr, 16);

	//Jump to second line
	setCursorPosition(0x40);


	//Main loop
	while(1){
		SysCtlDelay(5333333); //Stand by
	}
}

uint8_t computeDelayCount(uint8_t waitTime, uint8_t clockFreq){
	return 0.3333333 * (clockFreq*1000000) * (waitTime * 0.001);
}
