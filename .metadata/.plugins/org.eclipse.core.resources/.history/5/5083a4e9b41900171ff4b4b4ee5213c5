#include <stdint.h>
#include <stdbool.h>
#include "inc/tm4c123gh6pm.h"
#include "inc/hw_types.h"
#include "inc/hw_memmap.h"
#include "driverlib/sysctl.h"
#include "driverlib/gpio.h"
#include "driverlib/debug.h"
#include "driverlib/pwm.h"
#include "driverlib/pin_map.h"
#include "inc/hw_gpio.h"

//Custom libraries
#include "tivaUtils.h"

//Constants
#define PULSE_DELAY 1

//Function declarations
void PUSH_ISR();

//Global Variables
uint8_t pushButton = 0;
bool pushFlag = false;

int main (void){
    //----MCU Initialization----
    SysCtlClockSet(SYSCTL_SYSDIV_5|SYSCTL_USE_PLL|SYSCTL_XTAL_16MHZ|SYSCTL_OSC_MAIN); //Set-up the clocking of the MCU to 40MHz
    //Enable port E peripheral
    SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOE);

    //setDelay(2); //1ms delay
   // while( !(SysCtlPeripheralReady(SYSCTL_PERIPH_GPIOE)) ); //In order to avoid potential FaultISR

    GPIOPinTypeGPIOOutput(GPIO_PORTE_BASE, GPIO_PIN_1); //Driver's STEP pin
    //--------------------------

    //---------Set up Port F push button---------
    HWREG(GPIO_PORTF_BASE + GPIO_O_LOCK) = GPIO_LOCK_KEY;
    HWREG(GPIO_PORTF_BASE + GPIO_O_CR) |= 0x01;
    HWREG(GPIO_PORTF_BASE + GPIO_O_LOCK) = 0;
    GPIODirModeSet(GPIO_PORTF_BASE, GPIO_PIN_4|GPIO_PIN_0, GPIO_DIR_MODE_IN);
    GPIOPadConfigSet(GPIO_PORTF_BASE, GPIO_PIN_4|GPIO_PIN_0, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD_WPU);
    //-------------------------------------------

    //--------Interrupt setup---------
    GPIOIntRegister(GPIO_PORTF_BASE, PUSH_ISR);
    GPIOIntTypeSet(GPIO_PORTF_BASE, GPIO_PIN_4|GPIO_PIN_0, GPIO_FALLING_EDGE);  // Set PB2/3 to falling edge
    GPIOIntEnable(GPIO_PORTF_BASE, GPIO_PIN_4|GPIO_PIN_0);
    //--------------------------------

	while(1){

		if(pushFlag){
			if(pushButton == 8){ //SW1 button
				GPIOPinWrite(GPIO_PORTE_BASE, GPIO_PIN_1, 2);
			}
			else{ //SW2 button

			}
		}

		//Perform a step
		GPIOPinWrite(GPIO_PORTE_BASE, GPIO_PIN_1, 2); //Set pin HIGH
		setDelay(PULSE_DELAY); //5ms delay
		//SysCtlDelay(500);
		GPIOPinWrite(GPIO_PORTE_BASE, GPIO_PIN_1, 0); //Set pin LOW
		setDelay(PULSE_DELAY); //5ms delay

	}
}


void PUSH_ISR(){
	setDelay(30); //For debouncing
	pushFlag = true;
	pushButton = GPIOIntStatus(GPIO_PORTF_BASE,true); //To read which button interrupted
	GPIOIntClear(GPIO_PORTF_BASE, GPIO_PIN_4|GPIO_PIN_0);
}
